# Objects to move around in CargoNet


##########################################################################
##########################################################################
class Cargo(object):

    def __init__(self, size=0):
        self.name = None
        self.amount = size

    ##########################################################################
    def turn(self):
        pass

    ##########################################################################
    def deplete(self, amt):
        self.amount -= amt
        self.amount = max(0, self.amount)

    ##########################################################################
    def add(self, amt):
        self.amount += amt

    ##########################################################################
    def __repr__(self):
        return "%s x %d" % (self.name, self.amount)


##########################################################################
##########################################################################
class Stone(Cargo):

    def __init__(self, size=0):
        Cargo.__init__(self, size)
        self.name = 'stone'


##########################################################################
##########################################################################
class Blocks(Cargo):

    def __init__(self, size=0):
        Cargo.__init__(self, size)
        self.name = 'blocks'


##########################################################################
##########################################################################
class Timber(Cargo):

    def __init__(self, size=0):
        Cargo.__init__(self, size)
        self.name = 'timber'


##########################################################################
##########################################################################
class Wood(Cargo):

    def __init__(self, size=0):
        Cargo.__init__(self, size)
        self.name = 'wood'

# EOF
